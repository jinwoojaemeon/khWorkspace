<!-- query.xml에서 주식 관련 쿼리들을 모두 이것으로 교체하세요 -->

<!-- 기존 단일 주식 쿼리들 제거하고 다중 주식 쿼리들로 교체 -->

<!-- 모든 주식 목록 조회 -->
<entry key="getAllStocks">
    SELECT STOCK_ID, STOCK_NAME 
    FROM STOCK_LIST
    ORDER BY STOCK_ID
</entry>

<!-- 특정 주식 가격 조회 -->
<entry key="getStockPrice">
    SELECT PRICE 
    FROM CHARACTER_STOCK 
    WHERE CHARACTER_ID = ? AND STOCK_ID = ?
</entry>

<!-- 주식 가격 업데이트 -->
<entry key="updateStockPrice">
    UPDATE CHARACTER_STOCK 
    SET PRICE = ? 
    WHERE CHARACTER_ID = ? AND STOCK_ID = ?
</entry>

<!-- 주식 구매 (보유 수량 증가) -->
<entry key="buyStock">
    UPDATE CHARACTER_STOCK 
    SET STOCK_CNT = STOCK_CNT + ? 
    WHERE CHARACTER_ID = ? AND STOCK_ID = ?
</entry>

<!-- 주식 판매 (보유 수량 감소) -->
<entry key="sellStock">
    UPDATE CHARACTER_STOCK 
    SET STOCK_CNT = STOCK_CNT - ? 
    WHERE CHARACTER_ID = ? AND STOCK_ID = ?
</entry>

<!-- 캐릭터 주식 초기화 -->
<entry key="initializeCharacterStocks">
    INSERT INTO CHARACTER_STOCK (CHARACTER_ID, STOCK_ID, STOCK_CNT, PRICE)
    VALUES (?, ?, 0, ?)
</entry>

<!-- 총 주식 가치 계산 -->
<entry key="getTotalStockValue"><![CDATA[
    SELECT NVL(SUM(STOCK_CNT * PRICE), 0) AS TOTAL_VALUE
    FROM CHARACTER_STOCK
    WHERE CHARACTER_ID = ?
]]></entry>

<!-- 캐릭터별 주식 보유 현황 조회 -->
<entry key="getCharacterStocks"><![CDATA[
    SELECT cs.STOCK_ID, sl.STOCK_NAME, cs.STOCK_CNT, cs.PRICE
    FROM CHARACTER_STOCK cs
    JOIN STOCK_LIST sl ON cs.STOCK_ID = sl.STOCK_ID
    WHERE cs.CHARACTER_ID = ?
    ORDER BY cs.STOCK_ID
]]></entry>

<!-- 기존 updateStockTrade는 사용하지 않음 - 다중 주식에서는 개별 거래 -->
<!-- updateStockTrade 쿼리 제거 또는 주석 처리 -->