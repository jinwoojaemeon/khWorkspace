-- 1
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

DROP TABLE TB_CLASS_TYPE;
-- 2
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR(10)
);


-- 3
ALTER TABLE TB_CATEGORY 
ADD CONSTRAINT TB_CATEGORY_NAME_PK PRIMARY KEY(NAME);

-- 4
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;


-- 5
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10)
                         MODIFY NAME VARCHAR2(20);
                         
-- 6 ???
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

--7  
ALTER TABLE TB_CATEGORY
RENAME COLUMN CATEGORY_NAME TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN CLASS_TYPE_NO TO PK_CLASS_TYPE_NO;

-- 8 
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

-- 9
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY 
FOREIGN KEY(CATEGORY) 
REFERENCES TB_CATEGORY(CATEGORY_NAME);

-- 10 

CREATE VIEW STUDENT_BASIC_INFO 
AS (
 SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
 FROM TB_STUDENT
);

-- 11

CREATE VIEW VW_COACH_INTERVIEW 
AS (
    SELECT STUDENT_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
); 

-- 12
DROP VIEW VW_CNT_STUDENT;
CREATE VIEW VW_CNT_STUDENT 
AS (
    SELECT DEPARTMENT_NAME, COUNT(*) AS "학과 별 학생 수"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO) 
    GROUP BY DEPARTMENT_NAME
);

-- 13 ?? 
SELECT STUDENT_NO, DECODE(STUDENT_NAME, '정진우', '없음')
FROM STUDENT_BASIC_INFO
WHERE STUDENT_NO = 'A213046';

-- 14  -WITH READ ONLY 를 사용한다. 
CREATE OR REPLACE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
   FROM TB_STUDENT
   WITH READ ONLY;
-- 15 
SELECT 과목번호, 과목이름, "누적수강생수(명)"
FROM (SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) "누적수강생수(명)"
      FROM TB_GRADE
           JOIN TB_CLASS USING(CLASS_NO)
      WHERE TERM_NO LIKE '2009%'
            OR TERM_NO LIKE '2008%'
            OR TERM_NO LIKE '2007%'
      GROUP BY CLASS_NO, CLASS_NAME
      ORDER BY 3 DESC)
WHERE ROWNUM <= 3;

COMMIT;





