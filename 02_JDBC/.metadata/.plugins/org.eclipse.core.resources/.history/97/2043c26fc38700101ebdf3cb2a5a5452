package com.jdbc.lifegame.view;

import static com.jdbc.lifegame.common.UiTemplate.*;
import java.util.Scanner;
import com.jdbc.lifegame.model.vo.LifeCharacter;
import com.jdbc.lifegame.controller.LifeCharacterController;

public class ShoppingMenu {
    private LifeCharacter life;
    private Scanner sc;
    private LifeCharacterController lcc;
    
    public ShoppingMenu(LifeCharacter life, Scanner sc) {
        this.life = life;
        this.sc = sc;
        this.lcc = new LifeCharacterController();
    }
    
    public void showMenu() {
        while(true) {
            String menuName = "쇼핑";
            menuHeader(menuName, life);
            
            System.out.println("1. 책 구매 - 가격: " + formatMoney(550) + ", 효과: 지능 +1");
            System.out.println("2. 영양제 - 가격: " + formatMoney(3000) + ", 효과: 체력 +2");
            System.out.println("3. 행운의 부적 - 가격: " + formatMoney(500) + ", 효과: 운 +1");
            System.out.println("4. 로또 - 가격: " + formatMoney(1000));
            System.out.println("0. ← 돌아가기");
            line();
            System.out.print("메뉴 선택: ");
            
            int sel = sc.nextInt();
            sc.nextLine();
            System.out.println("\n");
            
            switch(sel) {
                case 1: buyItem("책", 550, 1, 0, 0); break;
                case 2: buyItem("영양제", 3000, 5, 0, 0); break;
                case 3: buyItem("행운의 부적", 500, 1, 0, 0); break;
                case 4: buyLotto("로또", 1000); break;
                case 0: return;
                default: System.out.println("잘못된 입력입니다.");
            }
            
            if(sel != 0) {
                System.out.println("Enter 키를 눌러 계속하세요...");
                sc.nextLine();
            }
        }
    }
    
    private void buyItem(String itemName, int price, int intBonus, int stamBonus, int luckBonus) {
        System.out.println("\n=== " + itemName + " 구매 ===");
        
        if(life.getMoney() < price) {
            System.out.printf("자금이 부족합니다. (필요: %s, 보유: %s)\n",  formatMoney(price), formatMoney(life.getMoney()));
            return;
        }
        
        // 능력치 변화 전 값 저장
        int prevInt = life.getIntelligence();
        int prevStam = life.getStamina();
        int prevLuck = life.getLuck();
        
        // 구매 실행
        life.setMoney(life.getMoney() - price);
        life.setIntelligence(life.getIntelligence() + intBonus);
        life.setStamina(life.getStamina() + stamBonus);
        life.setLuck(life.getLuck() + luckBonus);
        
        // 데이터베이스 업데이트 (쇼핑 전용)
        lcc.updateShopping(life);
        
        // 구매 완료 메시지
        line();
        System.out.println("지출: " + formatMoney(price));
        
        // 능력치 변화 표시
        if(intBonus > 0) {
            System.out.println("지능: " + prevInt + " → " + life.getIntelligence() + " (+" + intBonus + ")");
        }
        if(stamBonus > 0) {
            System.out.println("체력: " + prevStam + " → " + life.getStamina() + " (+" + stamBonus + ")");
        }
        if(luckBonus > 0) {
            System.out.println("운: " + prevLuck + " → " + life.getLuck() + " (+" + luckBonus + ")");
        }
        
        System.out.println("남은 자금: " + formatMoney(life.getMoney()));
        line();
        
       
    }
    
    private void buyLotto(String itemName, int price) {
    	String menuName = "로또";
        menuHeader(menuName, life);
        System.out.println("가격: " + formatMoney(price));
        System.out.println("현재 자금: " + formatMoney(life.getMoney()));
        System.out.println("연간 구매 제한: 10개");
        System.out.println("당첨금: " + formatMoney(50000));
        
        // 자금 확인
        if(life.getMoney() < price) {
            System.out.printf("자금이 부족합니다. (필요: %s, 보유: %s)\n", formatMoney(price), formatMoney(life.getMoney()));
            return;
        }
        
        // 로또 구매
        life.setMoney(life.getMoney() - price);
        
        double winChance = 0.005 + (life.getLuck() * 0.0005);
        
        if(Math.random() < winChance) {
            life.setMoney(life.getMoney() + 50000);
            System.out.println("🎉 당첨! 상금 " + formatMoney(50000) + " 획득!");
        } else {
            System.out.println("💔 꽝입니다...");
        }
 

        lcc.updateRealEstate(life);
    }
}