package com.jdbc.lifegame.controller;
import static com.jdbc.lifegame.view.DisplayMsg.displayFail;
import static com.jdbc.lifegame.view.DisplayMsg.displaySuccess;

import com.jdbc.lifegame.model.vo.LifeCharacter;
import com.jdbc.lifegame.service.LifeCharacterService;
import com.jdbc.lifegame.view.LifegameMenu;

public class LifeCharacterController {
	private LifeCharacterService lcs = new LifeCharacterService();
	
	public LifeCharacterController() {
		super();
	}
	
	public void createNewCharacter(String characterName, String accessId) {
		LifeCharacter life = new LifeCharacter(characterName, accessId);
		int result = lcs.createNewCharacter(life);
		if(result > 0) {
			displaySuccess("인생게임을 시작합니다.");
			new LifegameMenu(life).gameMain();
			
		} else {
			displayFail("게임 시작에 실패하였습니다.");
		}
	}
	
	// 일반적인 실행 (나이 증가 + 주식 변동)
	public void execute(LifeCharacter life) {
		int result = lcs.execute(life);
		if(result > 0) {
			displaySuccess("실행을 성공적으로 마쳤습니다.");
			new StockController().updateStockPrice(life.getcharacterId());
		} else {
			displayFail("실행에 실패하였습니다.");
		}
	}
	
	// 주식 거래용 실행 (나이 변화 없음, 주식 변동 없음)
	public void executeStockTrade(LifeCharacter life) {
		int result = lcs.executeStockTrade(life);
		if(result > 0) {
			displaySuccess("거래를 성공적으로 마쳤습니다.");
			// 주식 거래 시에는 주식 가격 변동하지 않음
		} else {
			displayFail("거래에 실패하였습니다.");
		}
	}
	
	public void updateRealEstate(LifeCharacter life) {
		int result = lcs.updateRealEstate(life);
		if(result > 0) {
			displaySuccess("부동산 구매가 완료되었습니다.");
		} else {
			displayFail("부동산 구매에 실패하였습니다.");
		}
	}